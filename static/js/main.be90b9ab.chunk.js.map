{"version":3,"sources":["components/NavBar.js","components/Day.js","components/Days.js","components/Today.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["Location","useState","city","NavBar","AppBar","position","Toolbar","Typography","variant","color","Day","props","weather","days","hat","day","umbrella","hasOwnProperty","Card","CardContent","gutterBottom","component","Object","keys","length","jsDate","Date","console","log","getDay","displayTime","CardActions","Button","size","href","target","Days","Grid","container","spacing","style","padding","item","xl","CardWeather","time","setTime","WhatToBring","onClick","getHours","Today","theme","createMuiTheme","palette","type","primary","main","light","dark","secondary","error","red","A400","background","default","overrides","MuiCard","root","margin","backgroundColor","MuiButton","App","setWeather","useEffect","fetch","process","REACT_APP_API_KEY","then","response","json","catch","err","Weather","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be90b9ab.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n//potentially add localstorage for location, see lecture 193 to use with useEffect\r\n\r\nconst Location = () => {\r\n    const [city] = useState('Hornsby');\r\n    return (\r\n    <div>\r\n      Location: {city}\r\n    </div>)\r\n}\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <div>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                Should I bring an umbrella or a hat today?\r\n                </Typography>\r\n                <Location />\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\n//import CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\n\r\nconst Day = (props) => {\r\n    const weather = props.weather;\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const displayTime = () => {\r\n      if(weather && Object.keys(weather).length !== 0){\r\n        const jsDate = new Date(weather['daily'][props.day][\"dt\"] * 1000);\r\n        console.log(Object.keys(weather).length)\r\n        return days[jsDate.getDay()];\r\n      }\r\n      //return \"monday\"\r\n    }\r\n    const hat = (weather && weather['daily'][props.day][\"clouds\"] <= 60 && weather['daily'][props.day][\"uvi\"] >= 3) ? true : false;\r\n    const umbrella = (weather && weather['daily'][props.day].hasOwnProperty('rain') && weather['daily'][props.day][\"rain\"] >= 5)? true : false;\r\n\r\n    return(\r\n        <div>\r\n            { weather ? (\r\n                <Card >\r\n\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"subtitle1\" component=\"h4\">\r\n                       {displayTime()}\r\n                    </Typography>\r\n                    \r\n                    {umbrella ? <BeachAccessIcon color='primary'/> : <BeachAccessIcon color='disabled'/>}\r\n                    {hat ? <WbSunnyIcon color='primary'/> : <WbSunnyIcon color='disabled'/>}\r\n                    \r\n                    </CardContent>\r\n                    <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" href='?day=2' target=\"_blank\">\r\n                        See details\r\n                    </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\nexport default Day;","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Day from './Day.js';\r\n\r\nconst Days = (props) => {\r\n    return(\r\n        <div>\r\n            <Grid container spacing={5} style={{padding: 24}}>\r\n                <Grid item xl={3}>\r\n                    <Day weather={props.weather} day={0}/>\r\n                </Grid>\r\n                <Grid item xl={3}>\r\n                    <Day weather={props.weather} day={1}/>\r\n                </Grid>\r\n                <Grid item xl={3}>\r\n                    <Day weather={props.weather} day={2}/>\r\n                </Grid>\r\n                <Grid item xl={3}>\r\n                    <Day weather={props.weather} day={3}/>\r\n                </Grid>\r\n                <Grid item xl={3}>\r\n                    <Day weather={props.weather} day={4}/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Days;","import React, {useState} from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\n//import CardMedia from '@material-ui/core/CardMedia'\r\n//import Button from '@material-ui/core/Button'\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n//https://openweathermap.org/api/one-call-api\r\n\r\nconst CardWeather = (props) => {\r\n    const weather = props.weather;\r\n    const [time, setTime] = useState(props.time);\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const displayTime = () => {\r\n      if(weather['hourly'][time][\"dt\"]){// == (weather && weather['hourly'][time][\"dt\"]) \r\n        const jsDate = new Date(weather['hourly'][time][\"dt\"] * 1000);\r\n        return jsDate.getHours() + ':00, ' + days[jsDate.getDay()];\r\n      }\r\n    }\r\n    const hat = (weather && weather['hourly'][time][\"clouds\"] <= 60 && weather['hourly'][time][\"uvi\"] >= 3) ? true : false;\r\n    const umbrella = (weather && weather['hourly'][time].hasOwnProperty('rain') && weather['hourly'][time][\"rain\"]['1h'] >= 1) ? true : false;\r\n  \r\n    return (\r\n      <div>\r\n        <h2><WhatToBring hat={hat} umbrella={umbrella}/></h2>\r\n        {umbrella ? <BeachAccessIcon color='primary'/> : <BeachAccessIcon color='disabled'/>}\r\n        {hat ? <WbSunnyIcon color='primary'/> : <WbSunnyIcon color='disabled'/>}\r\n        {(weather && <p>Feels like: {weather['hourly'][time][\"feels_like\"]} degrees</p> )}\r\n        {(weather && weather['hourly'][time][\"rain\"] && <p>Rain: {weather['hourly'][time][\"rain\"]['1h']}mm</p> )}\r\n        {(weather && <p>Cloudiness: {weather['hourly'][time][\"clouds\"]}</p> )}\r\n        {(weather && <p>UV index: {weather['hourly'][time][\"uvi\"]}</p> )}\r\n        {console.log(time, weather)}\r\n        <br/>{(time >= 1) && <button onClick={() => setTime(time - 1)}> {'<'} </button>}\r\n        Time: {displayTime()}\r\n        {(time <= 46) && <button onClick={() => setTime(time + 1)}> {'>'} </button>}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const WhatToBring = (props) => {\r\n    if(props.umbrella && props.hat){\r\n      return \"Bring both!\";\r\n    }else if(props.umbrella){\r\n      return \"Don't forget your umbrella!\";\r\n    }else if(props.hat){\r\n      return \"Pick out a hat\";\r\n    }else{\r\n      return \"No need for either\";\r\n    }\r\n  }\r\n\r\nconst Today = (props) => (\r\n    <Card>\r\n      <CardContent>\r\n      <Typography gutterBottom variant=\"subtitle1\" component=\"h2\">\r\n        <CardWeather time={0} weather={props.weather}/>\r\n      </Typography>\r\n      </CardContent>\r\n    </Card>\r\n)\r\n\r\nexport default Today;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#61dafb',\r\n      light: '#61dafb',\r\n      dark: '#21a1c4',\r\n    },\r\n    secondary: {\r\n      main: '#b5ecfb',\r\n      light: '#61dafb',\r\n      dark: '#21a1c4',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#282c34',\r\n    },\r\n  },\r\n  overrides: {\r\n   \r\n    MuiCard: {\r\n        root: {\r\n          padding: '5px 5px',\r\n          margin: '5px',\r\n          backgroundColor: '#fff', // 5d737e\r\n        },\r\n      },\r\n    MuiButton: {\r\n      root: {\r\n        margin: '5px',\r\n      },\r\n    },\r\n  },\r\n});\r\nexport default theme;","import './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport NavBar from './components/NavBar.js';\r\nimport Days from './components/Days.js';\r\nimport Today from './components/Today.js';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\n\r\nfunction Weather(){\r\n  const [weather, setWeather] = useState();\r\n  useEffect(() => {\r\n    fetch(process.env.REACT_APP_API_KEY)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      setWeather(response)\r\n    })\r\n    .catch(err => { console.log(err); \r\n    });\r\n    //setWeather({})\r\n  }, [])\r\n  return (weather) ? weather : null;\r\n}\r\n\r\nfunction App() {\r\n  const weather = Weather();\r\n  console.log(weather);\r\n  if(weather){\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <header className=\"App-header\">\r\n          <hr/><Today weather={weather}/><hr/>\r\n        </header>\r\n        <body>\r\n          \r\n          <Days weather={weather}/>\r\n        </body>\r\n      </div>\r\n      </ThemeProvider>\r\n    );\r\n  }else{\r\n    return null;\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}